#10123

//!
                  Card(color: Colors.grey.shade100, child: 
                    Column(children: [
                  const SizedBox(width: 230, height: 32, child: 
                          ListTile(tileColor: Colors.grey, title: 
                            Center(child: Text('Standard Widgets', style: TextStyle(fontSize: 14, color: Colors.black, fontWeight: FontWeight.w800),)),
                          ),
                        ),
                      ]
                    )
                  ),
                  //!
                  
                  Card(color: addchild ? Colors.amber : Colors.grey.shade100, child: //!ADDCHILD
                    Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        SizedBox(width: 230, height: 45,
                          child: ListTile(title: Text('Textbutton', style: TextStyle(fontSize: 18),),
                            trailing: Icon(Icons.add, color: Colors.black, size: 30,), leading: Icon(Icons.smart_button_rounded),
                            onTap: () => addchild ? addChildObject(101) : addObject(101),//!ADDCHILD
                          ),
                        ),
                      ]
                    )
                  ),
                  Card(color: Colors.grey.shade100, child: 
                    Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        SizedBox(width: 230, height: 45,
                          child: ListTile(title: Text('Iconbutton',style: TextStyle(fontSize: 18)),
                            trailing: Icon(Icons.add, color: Colors.black, size: 30,), leading: Icon(Icons.info),
                            onTap: () => addObject(102),
                          ),
                        ),
                      ]
                    )
                  ),
                  Card(color: Colors.grey.shade100, child: 
                    Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start,
                      children: 
                      [
                        SizedBox(width: 230, height: 45,
                          child: ListTile(title: Text('Textfield',style: TextStyle(fontSize: 18)),
                            trailing: Icon(Icons.add, color: Colors.black, size: 30,), leading: Icon(Icons.text_fields),
                            onTap: () => addObject(103),
                          ),
                        ),
                      ]
                    )
                  ),
                  //!UDEV
                  //Card(color: Colors.grey.shade100, child:
                  //!COLUMN
                    Container(color:  Colors.lightGreen, width: 230, height: 30, child: 
                      Row(mainAxisSize: MainAxisSize.min, children: 
                        [
                            Icon(Icons.view_column, size: 20,),
                            SizedBox(width: 50,),
                            Text('Column',style: TextStyle(fontSize: 16)),
                            SizedBox(width: 50,),
                            IconButton(icon: Icon(Icons.add), color: Colors.black, iconSize: 20,
                              onPressed: () => addObject(104),),
                        ]
                      ),
                    ),

#10123




//! 1109 ***********************************************************************
  readFromAPI(){
    
      //*Write Serizlize persistent model in addObject to API_1
      /*print(fmv.fmc.positionX);
      print(fmv.fmc.hpb.value.btntext);
      print(fmv.fmc.getCurCol);
      print(fmv.fmc.bradius);
      print(fmv.fmc.hpb.value.elevation);*/

      //!
      //Read(for.each fmv in API)
      //fmv.fmc.positionX = from.API.positionX - (read all props)
      //addserObj(fmv.catid)
      //
  }

  //! if has serialized objects
  addserObj(int ci){
    setState(() {
      FModelView smv = FModelView(mcallback: handleId,);
      Serializer se = Serializer();
      double px = se.getSerialObjects;
      
      smv.fmc.positionX.value = px;

      smv.fmc.hpb.value.btntext = 'Serialize';
      smv.fmc.bradius.value = 12;
    
      smv.setCatId = ci;
      _mid = smv.getMoid;
      stackobj.add(smv);
      objmap[_mid] = smv;

      smv.markSelObj(fmv, objmap);
    });

  }